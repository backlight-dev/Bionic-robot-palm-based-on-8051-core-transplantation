
------------------------------------------------------------------------------------
-- DESCRIPTION   :  Component was generated by i8051_mkr Tools, version 1.0
--                  i8051_mkr was write originally by Tony Givargis and modified by 
--                  kai sun,mounthorse@bbs.buaa.
------------------------------------------------------------------------------------

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.std_logic_arith.all;
use ieee.std_logic_unsigned.all;

entity mc8051_rom is
  port (clk        : in  std_logic;  			  -- clock signal
        reset      : in  std_logic;  			  -- reset signal
        rom_data_o : out std_logic_vector(7 downto 0);    -- data output
        rom_adr_i  : in  std_logic_vector(15 downto 0));  -- adresses
end mc8051_rom;

architecture sim of mc8051_rom is
    type ROM_TYPE is array (0 to 191) of std_logic_vector (7 downto 0);
    signal PROGRAM : ROM_TYPE := (
	"00000010",	-- LJMP   
	"00000000",
	"00000011",
	"01111000",	-- MOV_7  
	"01111111",
	"11100100",	-- CLR_1  
	"11110110",	-- MOV_13 
	"11011000",	-- DJNZ_1 
	"11111101",
	"01110101",	-- MOV_12 
	"10000001",
	"00100000",
	"00000010",	-- LJMP   
	"00000000",
	"01001010",
	"00000010",	-- LJMP   
	"00000000",
	"10101101",
	"11100100",	-- CLR_1  
	"10010011",	-- MOVC_1 
	"10100011",	-- INC_5  
	"11111000",	-- MOV_5  
	"11100100",	-- CLR_1  
	"10010011",	-- MOVC_1 
	"10100011",	-- INC_5  
	"01000000",	-- JC     
	"00000011",
	"11110110",	-- MOV_13 
	"10000000",	-- SJMP   
	"00000001",
	"11110010",	-- MOVX_3 
	"00001000",	-- INC_2  
	"11011111",	-- DJNZ_1 
	"11110100",
	"10000000",	-- SJMP   
	"00101001",
	"11100100",	-- CLR_1  
	"10010011",	-- MOVC_1 
	"10100011",	-- INC_5  
	"11111000",	-- MOV_5  
	"01010100",	-- ANL_4  
	"00000111",
	"00100100",	-- ADD_4  
	"00001100",
	"11001000",	-- XCH_1  
	"11000011",	-- CLR_2  
	"00110011",	-- RLC    
	"11000100",	-- SWAP   
	"01010100",	-- ANL_4  
	"00001111",
	"01000100",	-- ORL_4  
	"00100000",
	"11001000",	-- XCH_1  
	"10000011",	-- MOVC_2 
	"01000000",	-- JC     
	"00000100",
	"11110100",	-- CPL_1  
	"01010110",	-- ANL_3  
	"10000000",	-- SJMP   
	"00000001",
	"01000110",	-- ORL_3  
	"11110110",	-- MOV_13 
	"11011111",	-- DJNZ_1 
	"11100100",
	"10000000",	-- SJMP   
	"00001011",
	"00000001",	-- AJMP   
	"00000010",
	"00000100",	-- INC_1  
	"00001000",	-- INC_2  
	"00010000",	-- JBC    
	"00100000",
	"01000000",
	"10000000",	-- SJMP   
	"10010000",
	"00000000",	-- NOP    
	"10111100",	-- CJNE_3 
	"11100100",
	"01111110",
	"00000001",	-- AJMP   
	"10010011",
	"01100000",	-- JZ     
	"10111100",
	"10100011",	-- INC_5  
	"11111111",	-- MOV_5  
	"01010100",	-- ANL_4  
	"00111111",
	"00110000",	-- JNB    
	"11100101",
	"00001001",
	"01010100",	-- ANL_4  
	"00011111",
	"11111110",	-- MOV_5  
	"11100100",	-- CLR_1  
	"10010011",	-- MOVC_1 
	"10100011",	-- INC_5  
	"01100000",	-- JZ     
	"00000001",
	"00001110",	-- INC_2  
	"11001111",	-- XCH_1  
	"01010100",	-- ANL_4  
	"11000000",
	"00100101",	-- ADD_2  
	"11100000",
	"01100000",	-- JZ     
	"10101000",
	"01000000",	-- JC     
	"10111000",
	"11100100",	-- CLR_1  
	"10010011",	-- MOVC_1 
	"10100011",	-- INC_5  
	"11111010",	-- MOV_5  
	"11100100",	-- CLR_1  
	"10010011",	-- MOVC_1 
	"10100011",	-- INC_5  
	"11111000",	-- MOV_5  
	"11100100",	-- CLR_1  
	"10010011",	-- MOVC_1 
	"10100011",	-- INC_5  
	"11001000",	-- XCH_1  
	"11000101",	-- XCH_2  
	"10000010",
	"11001000",	-- XCH_1  
	"11001010",	-- XCH_1  
	"11000101",	-- XCH_2  
	"10000011",
	"11001010",	-- XCH_1  
	"11110000",	-- MOVX_4 
	"10100011",	-- INC_5  
	"11001000",	-- XCH_1  
	"11000101",	-- XCH_2  
	"10000010",
	"11001000",	-- XCH_1  
	"11001010",	-- XCH_1  
	"11000101",	-- XCH_2  
	"10000011",
	"11001010",	-- XCH_1  
	"11011111",	-- DJNZ_1 
	"11101001",
	"11011110",	-- DJNZ_1 
	"11100111",
	"10000000",	-- SJMP   
	"10111110",
	"11100100",	-- CLR_1  
	"11111101",	-- MOV_5  
	"11101101",	-- MOV_1  
	"11000011",	-- CLR_2  
	"10011111",	-- SUBB_1 
	"11101110",	-- MOV_1  
	"01100100",	-- XRL_4  
	"10000000",
	"11111000",	-- MOV_5  
	"01110100",	-- MOV_4  
	"10000000",
	"10011000",	-- SUBB_1 
	"01010000",	-- JNC    
	"00001111",
	"11100100",	-- CLR_1  
	"11111100",	-- MOV_5  
	"11100100",	-- CLR_1  
	"11111011",	-- MOV_5  
	"00001011",	-- INC_2  
	"10111011",	-- CJNE_3 
	"11111010",
	"11111100",
	"00001100",	-- INC_2  
	"10111100",	-- CJNE_3 
	"11111010",
	"11110110",
	"00001101",	-- INC_2  
	"10000000",	-- SJMP   
	"11100101",
	"00100010",	-- RET    
	"10110010",	-- CPL_3  
	"00000000",
	"10100010",	-- MOV_16 
	"00000000",
	"10010010",	-- MOV_17 
	"10010000",
	"01111111",	-- MOV_7  
	"00001010",
	"01111110",	-- MOV_7  
	"00000000",
	"00010010",	-- LCALL  
	"00000000",
	"10001111",
	"10000000",	-- SJMP   
	"11110001",
	"11000001",	-- AJMP   
	"00000000",
	"00000000",	-- NOP    
	"00000000");	-- NOP    
begin
  p_read : process (clk,  rom_adr_i)
  begin
        if( clk'event and clk = '1' ) then
			rom_data_o<= PROGRAM( conv_integer(rom_adr_i) );
        end if;
  end process p_read; 
end sim;

configuration mc8051_rom_sim_cfg of mc8051_rom is
  for sim
  end for;
end mc8051_rom_sim_cfg;
